syntax = "proto3";

option java_multiple_files = true;
option java_package = "dev.krata.proto.control";
option java_outer_classname = "ControlProto";

package krata.control;

message GuestOciImageSpec {
    string image = 1;
}

message GuestImageSpec {
    oneof image {
        GuestOciImageSpec oci = 1;
    }
}

message GuestNetworkInfo {
    string ipv4 = 1;
    string ipv6 = 2;
}

message GuestInfo {
    string id = 1;
    string name = 2;
    GuestImageSpec image = 3;
    GuestNetworkInfo network = 4;
}

message LaunchGuestRequest {
    string name = 1;
    GuestImageSpec image = 2;
    uint32 vcpus = 3;
    uint64 mem = 4;
    repeated string env = 5;
    repeated string run = 6;
}

message LaunchGuestReply {
    GuestInfo guest = 1;
}

message ListGuestsRequest {}

message ListGuestsReply {
    repeated GuestInfo guests = 1;
}

message DestroyGuestRequest {
    string guest_id = 1;
}

message DestroyGuestReply {}

message ConsoleDataRequest {
    string guest_id = 1;
    bytes data = 2;
}

message ConsoleDataReply {
    bytes data = 1;
}

message WatchEventsRequest {}

message GuestLaunchedEvent {
    string guest_id = 1;
}

message GuestDestroyedEvent {
    string guest_id = 1;
}

message GuestExitedEvent {
    string guest_id = 1;
    int32 code = 2;
}

message WatchEventsReply {
    oneof event {
        GuestLaunchedEvent guest_launched = 1;
        GuestDestroyedEvent guest_destroyed = 2;
        GuestExitedEvent guest_exited = 3;
    }
}

service ControlService {
    rpc LaunchGuest(LaunchGuestRequest) returns (LaunchGuestReply);
    rpc DestroyGuest(DestroyGuestRequest) returns (DestroyGuestReply);
    rpc ListGuests(ListGuestsRequest) returns (ListGuestsReply);
    rpc ConsoleData(stream ConsoleDataRequest) returns (stream ConsoleDataReply);

    rpc WatchEvents(WatchEventsRequest) returns (stream WatchEventsReply);
}
